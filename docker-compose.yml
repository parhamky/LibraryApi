services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/data
    restart: unless-stopped
    env_file: ".env"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s

  server:
    container_name: lib-server
    image: ${IMAGE_TAG}
    ports:
      - "${HOST_PORT}:${CONTAINER_PORT}"
    restart: unless-stopped
    volumes:
      - server-data:/data
    depends_on:
      mysql:
        condition: service_healthy
    env_file: ".env"

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file: ".env"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
  redis:
    container_name: redis
    image: redis
    ports:
      - "6378:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s


volumes:
  mysql-data:
  server-data:
  postgres-data:
